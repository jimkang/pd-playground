#N canvas 0 110 1213 644 12;
#N canvas 78 152 1148 704 fft-analysis 1;
#X obj 94 511 *~;
#X obj 55 511 *~;
#X obj 477 359 *~;
#X obj 436 359 *~;
#X obj 436 382 +~;
#X obj 23 169 *~;
#X obj 27 116 inlet~;
#X obj 54 206 rfft~;
#X obj 42 558 *~;
#X obj 141 245 *~;
#X obj 435 314 rfft~;
#X obj 54 535 rifft~;
#X obj 43 608 outlet~;
#X obj 107 245 *~;
#X obj 107 268 +~;
#X text 522 411 modulus;
#X obj 107 420 *~;
#X obj 111 150 tabreceive~ \$0-hann;
#X obj 599 53 loadbang;
#X obj 87 560 tabreceive~ \$0-hann;
#X obj 436 288 *~;
#X obj 436 263 inlet~;
#X obj 469 289 tabreceive~ \$0-hann;
#X text 522 428 of control;
#X text 520 445 amplitude;
#X text 196 248 reciprocal;
#X text 199 267 modulus of;
#X text 195 287 filter input;
#X text 196 306 amplitude;
#X text 140 129 filter input;
#X text 501 263 control source;
#X text 497 313 Fourier transform;
#X text 28 17 Internal workings of the timbre stamping algorithm. First
the "filter input" is treated as in the compressor patch \, multiplying
each channel amplitude by one over its modulus (but limited by the
"squelch" parameter.) It is then multiplied by the modulus of the channel
amplitude for the control source (which is Fourier analyzed in parallel
with the filter input.);
#X text 145 422 multiply the two amplitude;
#X text 143 439 factors (for compression;
#X text 145 455 and to apply new timbre);
#X obj 108 480 *~ 0.00065;
#X msg 764 42 \; pd dsp 1 \; window-size 1024 \; squelch 30 \; squelch-set
set 30;
#X text 102 611 Final result outlet (left);
#X obj 107 294 +~ 1e-20;
#X floatatom 943 350 5 0 0 0 - - -;
#X obj 834 193 bang~;
#X obj 604 108 value blockcount;
#X obj 858 306 send blockcount;
#X obj 838 277 expr (blockcount + 1);
#X obj 939 324 receive blockcount;
#X obj 418 138 inlet;
#X obj 435 193 send blockcount;
#X floatatom 443 163 5 0 0 0 - - -;
#X floatatom 942 403 5 0 0 0 - - -;
#X floatatom 981 463 5 0 0 0 - - -;
#X obj 949 496 send take-snapshot;
#X obj 835 232 spigot;
#X obj 945 431 select 1;
#X msg 881 188 1;
#X msg 905 218 0;
#X text 942 220 Pause blockcount;
#X text 918 187 Continue blockcount;
#X obj 947 380 mod 100;
#X text 491 137 Start logblocks and reset blockcount;
#X obj 278 113 logblock~ 020-carrier-highpass-a 74;
#X obj 219 180 logblock~ 030-carrier-hann-a 74;
#X obj 124 201 logblock~ 045-carrier-fft-real-a 74;
#X obj 170 227 logblock~ 047-carrier-fft-imag-a 74;
#X obj 145 352 logblock~ 050-carrier-rfft-added-a 74;
#X obj 133 387 logblock~ 060-carrier-rsqrt-a 74;
#X obj 439 474 logblock~ 070-info-sqrt-a 74;
#X obj 244 488 logblock~ 080-amp-factor-roots-multiplied-a 74;
#X obj 276 556 logblock~ 150-carrier-fft-imag-x-reduced-amp-factors-a
74;
#X obj 20 659 logblock~ 100-carrier-fft-real-x-reduced-amp-factors-a
74;
#X obj 633 399 logblock~ 055-info-rfft-added-a 74;
#X obj 550 368 logblock~ 042-info-fft-real-a 74;
#X obj 548 341 logblock~ 043-info-fft-imag-a 74;
#X obj 602 230 logblock~ 007-info-hann-a 74;
#X obj 599 185 logblock~ 006-info-highpass-a 74;
#X obj 622 592 logblock~ 048-info-fft-real-sq-a 74;
#X obj 321 593 logblock~ 049-carrier-fft-real-sq-a 74;
#X obj 322 620 logblock~ 049.5-carrier-fft-imag-sq-a 74;
#X obj 649 619 logblock~ 048.5-info-fft-imag-sq-a 74;
#X obj 244 512 logblock~ 090-amp-factor-roots-reduced 74;
#X obj 107 321 rsqrt~;
#X obj 436 405 sqrt~;
#X text 706 14 Change overlap from 0 to 4 (or any power of 2) here
to make it work.;
#X obj 603 15 block~ 1024 0;
#X connect 0 0 11 1;
#X connect 0 0 68 0;
#X connect 1 0 11 0;
#X connect 1 0 69 0;
#X connect 2 0 4 1;
#X connect 2 0 78 0;
#X connect 3 0 4 0;
#X connect 3 0 75 0;
#X connect 4 0 70 0;
#X connect 4 0 81 0;
#X connect 5 0 7 0;
#X connect 5 0 61 0;
#X connect 6 0 5 0;
#X connect 6 0 60 0;
#X connect 7 0 13 0;
#X connect 7 0 13 1;
#X connect 7 0 1 0;
#X connect 7 0 62 0;
#X connect 7 1 9 0;
#X connect 7 1 9 1;
#X connect 7 1 0 0;
#X connect 7 1 63 0;
#X connect 8 0 12 0;
#X connect 9 0 14 1;
#X connect 9 0 77 0;
#X connect 10 0 3 0;
#X connect 10 0 3 1;
#X connect 10 0 71 0;
#X connect 10 1 2 0;
#X connect 10 1 2 1;
#X connect 10 1 72 0;
#X connect 11 0 8 0;
#X connect 13 0 14 0;
#X connect 13 0 76 0;
#X connect 14 0 39 0;
#X connect 14 0 64 0;
#X connect 16 0 36 0;
#X connect 16 0 67 0;
#X connect 17 0 5 1;
#X connect 18 0 37 0;
#X connect 19 0 8 1;
#X connect 20 0 10 0;
#X connect 20 0 73 0;
#X connect 21 0 20 0;
#X connect 21 0 74 0;
#X connect 22 0 20 1;
#X connect 36 0 0 1;
#X connect 36 0 1 1;
#X connect 36 0 79 0;
#X connect 39 0 80 0;
#X connect 40 0 58 0;
#X connect 41 0 52 0;
#X connect 44 0 43 0;
#X connect 45 0 40 0;
#X connect 46 0 48 0;
#X connect 46 0 60 0;
#X connect 46 0 61 0;
#X connect 46 0 62 0;
#X connect 46 0 63 0;
#X connect 46 0 64 0;
#X connect 46 0 65 0;
#X connect 46 0 66 0;
#X connect 46 0 67 0;
#X connect 46 0 68 0;
#X connect 46 0 69 0;
#X connect 46 0 70 0;
#X connect 46 0 71 0;
#X connect 46 0 72 0;
#X connect 46 0 73 0;
#X connect 46 0 74 0;
#X connect 46 0 76 0;
#X connect 46 0 75 0;
#X connect 46 0 77 0;
#X connect 46 0 78 0;
#X connect 46 0 79 0;
#X connect 48 0 47 0;
#X connect 49 0 53 0;
#X connect 52 0 44 0;
#X connect 53 1 50 0;
#X connect 54 0 52 1;
#X connect 55 0 52 1;
#X connect 58 0 49 0;
#X connect 80 0 16 0;
#X connect 80 0 65 0;
#X connect 81 0 16 1;
#X connect 81 0 66 0;
#X restore 86 444 pd fft-analysis;
#X text 137 12 CORT&ZACK's SECRET;
#X text 27 422 filter;
#X text 29 437 input;
#X text 232 441 source;
#X text 233 422 control;
#X floatatom 53 300 0 0 500 0 - squelch-set -;
#X obj 53 324 s squelch;
#X obj 65 525 output~;
#X msg 157 278 ../sound/bell.aiff;
#X msg 157 328 ../sound/voice2.wav;
#X obj 156 356 s read-sound1;
#X msg 373 280 ../sound/bell.aiff;
#X msg 373 305 ../sound/voice.wav;
#X obj 373 355 s read-sound2;
#X text 386 256 control source;
#X text 169 255 filter input;
#X text 255 231 change input sounds;
#X floatatom 454 409 5 0 0 0 - #0-samp-msec -;
#X obj 87 394 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 232 385 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#N canvas 456 141 791 692 test-signals 0;
#X obj 94 453 line~;
#X obj 90 369 f;
#X obj 90 524 outlet~;
#X msg 93 419 0 \, \$1 \$2;
#X obj 94 393 pack 0 0;
#X obj 190 344 /;
#X obj 249 325 * 0.001;
#X obj 26 508 hip~ 5;
#X obj 35 246 loadbang;
#X msg 90 322 1;
#X obj 191 302 t b b f;
#X obj 117 270 t b f;
#X obj 87 477 tabread4~ \$0-sample;
#X text 21 28 test signal: looped sample playback;
#X obj 51 159 hip~ 5;
#X obj 51 135 adc~ 1;
#X obj 113 159 s insamprate;
#X obj 40 99 inlet;
#X obj 113 135 samplerate~;
#X obj 116 246 r \$0-samplength;
#X obj 191 276 r \$0-insamprate;
#X obj 40 182 tabwrite~ \$0-sample;
#X obj 398 437 line~;
#X obj 398 362 f;
#X obj 398 517 outlet~;
#X msg 398 416 0 \, \$1 \$2;
#X obj 398 390 pack 0 0;
#X obj 498 337 /;
#X obj 557 318 * 0.001;
#X obj 309 459 hip~ 5;
#X obj 343 239 loadbang;
#X msg 398 315 1;
#X obj 398 337 metro 1000;
#X obj 499 295 t b b f;
#X obj 425 263 t b f;
#X obj 360 152 hip~ 5;
#X obj 360 128 adc~ 1;
#X obj 348 91 inlet;
#X obj 422 128 samplerate~;
#X obj 422 152 s insamprate2;
#X obj 348 175 tabwrite~ \$0-sample2;
#X obj 424 239 r \$0-samplength2;
#X obj 499 269 r \$0-insamprate2;
#X obj 398 462 tabread4~ \$0-sample2;
#X obj 512 76 inlet;
#X text 489 46 comment;
#X obj 456 487 logblock~ 005-info-raw-a 74;
#X obj 169 503 logblock~ 010-carrier-raw-a 74;
#X obj 307 32 block~ 1024 0;
#X floatatom 17 400 8 0 0 0 - - -;
#X obj 172 397 print;
#X text 227 397 "223316 5063.85" is typical output from this pack object.
;
#X text 162 428 Typically sent from this message: 0 \, then 223316
5063.85;
#X text 139 455 comment;
#X text 153 538 metro goes every second \, but if tabread4~ is still
going \, it seems that pack does not proceed. Maybe it waits for all
of the DSP in the chain to be done?;
#X obj 90 344 metro 1000;
#X connect 0 0 12 0;
#X connect 1 0 4 0;
#X connect 1 0 49 0;
#X connect 3 0 0 0;
#X connect 3 0 50 0;
#X connect 4 0 3 0;
#X connect 5 0 4 1;
#X connect 5 0 55 1;
#X connect 6 0 5 1;
#X connect 8 0 9 0;
#X connect 9 0 55 0;
#X connect 10 0 9 0;
#X connect 10 1 5 0;
#X connect 10 2 6 0;
#X connect 11 0 9 0;
#X connect 11 1 5 0;
#X connect 11 1 1 1;
#X connect 12 0 47 0;
#X connect 12 0 2 0;
#X connect 14 0 21 0;
#X connect 15 0 14 0;
#X connect 17 0 18 0;
#X connect 17 0 21 0;
#X connect 18 0 16 0;
#X connect 19 0 11 0;
#X connect 20 0 10 0;
#X connect 22 0 43 0;
#X connect 23 0 26 0;
#X connect 25 0 22 0;
#X connect 26 0 25 0;
#X connect 27 0 26 1;
#X connect 27 0 32 1;
#X connect 28 0 27 1;
#X connect 30 0 31 0;
#X connect 31 0 32 0;
#X connect 32 0 23 0;
#X connect 33 0 31 0;
#X connect 33 1 27 0;
#X connect 33 2 28 0;
#X connect 34 0 31 0;
#X connect 34 1 27 0;
#X connect 34 1 23 1;
#X connect 35 0 40 0;
#X connect 36 0 35 0;
#X connect 37 0 38 0;
#X connect 37 0 40 0;
#X connect 38 0 39 0;
#X connect 41 0 34 0;
#X connect 42 0 33 0;
#X connect 43 0 46 0;
#X connect 43 0 24 0;
#X connect 44 0 46 0;
#X connect 44 0 47 0;
#X connect 55 0 1 0;
#X restore 87 415 pd test-signals;
#X text 104 393 <- record ->;
#N canvas 336 106 722 350 insample2 0;
#N canvas 0 50 450 300 (subpatch) 0;
#X array \$0-sample2 220718 float 0;
#X coords 0 1 220717 -1 400 150 1;
#X restore 298 24 graph;
#X obj 19 74 unpack s f;
#X obj 19 184 soundfiler;
#X text 356 250 read a sample;
#X obj 276 249 loadbang;
#X obj 19 100 t s b;
#X obj 19 135 pack s s;
#X msg 19 160 read -resize \$1 \$2;
#X obj 74 46 44100;
#X obj 19 47 t a b;
#X obj 19 247 /;
#X obj 19 271 * 1000;
#X obj 19 23 r read-sound2;
#X obj 116 74 s \$0-insamprate2;
#X obj 75 99 symbol \$0-sample2;
#X obj 29 208 s \$0-samplength2;
#X obj 57 247 r \$0-insamprate2;
#X obj 19 294 s \$0-samp2-msec;
#X msg 276 273 \; read-sound2 ../sound/voice.wav;
#X connect 1 0 5 0;
#X connect 1 1 13 0;
#X connect 2 0 10 0;
#X connect 2 0 15 0;
#X connect 4 0 18 0;
#X connect 5 0 6 0;
#X connect 5 1 14 0;
#X connect 6 0 7 0;
#X connect 7 0 2 0;
#X connect 8 0 13 0;
#X connect 9 0 1 0;
#X connect 9 1 8 0;
#X connect 10 0 11 0;
#X connect 11 0 17 0;
#X connect 12 0 9 0;
#X connect 14 0 6 1;
#X connect 16 0 10 1;
#X restore 334 430 pd insample2;
#N canvas 89 216 722 350 insample1 0;
#N canvas 0 50 450 300 (subpatch) 0;
#X array \$0-sample 223316 float 0;
#X coords 0 1 223315 -1 400 150 1;
#X restore 259 24 graph;
#X obj 19 74 unpack s f;
#X obj 19 184 soundfiler;
#X text 356 250 read a sample;
#X obj 276 249 loadbang;
#X obj 19 100 t s b;
#X obj 75 99 symbol \$0-sample;
#X obj 19 135 pack s s;
#X msg 19 160 read -resize \$1 \$2;
#X obj 74 46 44100;
#X obj 19 47 t a b;
#X obj 29 208 s \$0-samplength;
#X obj 116 74 s \$0-insamprate;
#X obj 19 247 /;
#X obj 19 271 * 1000;
#X obj 19 294 s \$0-samp-msec;
#X obj 57 247 r \$0-insamprate;
#X obj 19 23 r read-sound1;
#X msg 276 273 \; read-sound1 ../sound/bell.aiff;
#X connect 1 0 5 0;
#X connect 1 1 12 0;
#X connect 2 0 11 0;
#X connect 2 0 13 0;
#X connect 4 0 18 0;
#X connect 5 0 7 0;
#X connect 5 1 6 0;
#X connect 6 0 7 1;
#X connect 7 0 8 0;
#X connect 8 0 2 0;
#X connect 9 0 12 0;
#X connect 10 0 1 0;
#X connect 10 1 9 0;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 16 0 13 1;
#X connect 17 0 10 0;
#X restore 334 408 pd insample1;
#X floatatom 453 432 5 0 0 0 - #0-samp2-msec -;
#N canvas 72 106 565 454 hann-window 0;
#N canvas 0 50 450 300 (subpatch) 0;
#X array \$0-hann 1024 float 0;
#X coords 0 1 1023 0 300 100 1;
#X restore 82 311 graph;
#X obj 378 165 osc~;
#X obj 378 190 *~ -0.5;
#X obj 378 214 +~ 0.5;
#X obj 331 247 tabwrite~ \$0-hann;
#X obj 37 88 r window-size;
#X obj 38 173 /;
#X obj 127 142 samplerate~;
#X obj 38 251 s window-sec;
#X obj 177 204 swap;
#X obj 177 228 /;
#X obj 177 252 s window-hz;
#X obj 49 201 * 1000;
#X obj 49 228 s window-msec;
#X obj 38 115 t f b f;
#X msg 173 92 resize \$1;
#X obj 173 116 s \$0-hann;
#X obj 330 105 r window-hz;
#X msg 382 130 0;
#X obj 330 131 t f b;
#X text 15 8 calculate Hann window table (variable window size) and
constants window-hz (fundamental frequency of analysis) \, window-sec
and window-msec (analysis window size in seconds and msec).;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 14 0;
#X connect 6 0 8 0;
#X connect 6 0 12 0;
#X connect 7 0 6 1;
#X connect 7 0 9 1;
#X connect 9 0 10 0;
#X connect 9 1 10 1;
#X connect 10 0 11 0;
#X connect 12 0 13 0;
#X connect 14 0 6 0;
#X connect 14 0 9 0;
#X connect 14 1 7 0;
#X connect 14 2 15 0;
#X connect 15 0 16 0;
#X connect 17 0 19 0;
#X connect 18 0 1 1;
#X connect 19 0 1 0;
#X connect 19 1 4 0;
#X connect 19 1 18 0;
#X restore 334 455 pd hann-window;
#X text 509 412 sample lengths \,;
#X text 510 427 msec;
#X text 27 35 This is a Fourier-based "vocoder" (perhaps better called
a "timbre stamp") like the one the Convolution brothers use. The "control
source" is analyzed to get its spectral envelope \, which is then stamped
onto the "filter input" by adjusting the amplitudes of its Fourier
transform. The "filter input" is first whitened by the compression
algorithm from the previous patch in this series. The best value of
"squelch" to use depends critically on what kind of sounds are used
for the filter input and the control source.;
#X text 402 498 updated for Pd version 0.39;
#X obj 232 567 dac~;
#X obj 546 25 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 551 81 openpanel;
#N canvas 0 50 450 250 (subpatch) 0;
#X array carrierFile 243065 float 0;
#X coords 0 1 243064 -1 200 140 1;
#X restore 533 237 graph;
#X obj 535 180 soundfiler;
#X msg 522 131 read -resize \$1 carrierFile;
#X obj 920 77 openpanel;
#X obj 904 176 soundfiler;
#X msg 891 127 read -resize \$1 infoFile;
#N canvas 0 50 450 250 (subpatch) 0;
#X array infoFile 240237 float 0;
#X coords 0 1 240236 -1 200 140 1 0 0;
#X restore 961 237 graph;
#X obj 919 38 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 761 257 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1226 254 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 766 296 tabplay~ carrierFile;
#X obj 1221 289 tabplay~ infoFile;
#X obj 803 452 dac~;
#X obj 740 115 s \$0-samplength;
#X obj 730 154 /;
#X obj 730 178 * 1000;
#X obj 730 201 s \$0-samp-msec;
#X obj 768 154 r \$0-insamprate;
#X obj 1092 118 /;
#X obj 1092 142 * 1000;
#X obj 1102 79 s \$0-samplength2;
#X obj 1130 118 r \$0-insamprate2;
#X obj 1092 165 s \$0-samp2-msec;
#X obj 53 367 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 157 303 ~/gcw/vocode/example-media/donut.wav;
#X msg 373 330 ~/gcw/vocode/example-media/talking.wav;
#X obj 104 243 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 102 221 Kick it off for real;
#X obj 47 197 loadbang;
#X connect 0 0 8 0;
#X connect 0 0 8 1;
#X connect 0 0 31 0;
#X connect 6 0 7 0;
#X connect 9 0 11 0;
#X connect 10 0 11 0;
#X connect 12 0 14 0;
#X connect 13 0 14 0;
#X connect 19 0 21 0;
#X connect 20 0 21 1;
#X connect 21 0 0 0;
#X connect 21 1 0 2;
#X connect 32 0 33 0;
#X connect 33 0 36 0;
#X connect 35 0 47 0;
#X connect 35 1 48 0;
#X connect 36 0 35 0;
#X connect 37 0 39 0;
#X connect 38 0 54 0;
#X connect 38 1 52 0;
#X connect 39 0 38 0;
#X connect 41 0 37 0;
#X connect 42 0 44 0;
#X connect 43 0 45 0;
#X connect 44 0 46 0;
#X connect 44 1 46 1;
#X connect 45 0 46 0;
#X connect 45 1 46 1;
#X connect 48 0 49 0;
#X connect 49 0 50 0;
#X connect 51 0 48 1;
#X connect 52 0 53 0;
#X connect 53 0 56 0;
#X connect 55 0 52 1;
#X connect 57 0 21 0;
#X connect 57 0 21 1;
#X connect 58 0 11 0;
#X connect 59 0 14 0;
#X connect 60 0 58 0;
#X connect 60 0 59 0;
#X connect 60 0 0 1;
#X connect 60 0 21 2;
